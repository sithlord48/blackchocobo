/****************************************************************************/
//    copyright 2010-2012 Chris Rizzitello <sithlord48@gmail.com>           //
//                                                                          //
//    This file is part of Black Chocobo.                                   //
//                                                                          //
//    Black Chocobo is free software: you can redistribute it and/or modify //
//    it under the terms of the GNU General Public License as published by  //
//    the Free Software Foundation, either version 3 of the License, or     //
//    (at your option) any later version.                                   //
//                                                                          //
//    Black Chocobo is distributed in the hope that it will be useful,      //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of        //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          //
//    GNU General Public License for more details.                          //
/****************************************************************************/
// This file is a modified verion of ff7file.h from Qhimm's jenova editor   //
#ifndef FF7SAVE_H
#define FF7SAVE_H

#include <QObject>

/* START FILE INFO (Vegeta_Ss4) v0.8.3*/

/*~~~~~~~~~~~~~~~~~~ PC HEADER INFO ~~~~~~~~~~~~~~ */
const int FF7_PC_SAVE_GAME_SIZE = 0xFE55;
const int FF7_PC_SAVE_GAME_HEADER = 0x09;
const int FF7_PC_SAVE_GAME_FOOTER = 0x0000;
const int FF7_PC_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_PC_SAVE_GAME_SLOT_HEADER = 0x00;
const int FF7_PC_SAVE_GAME_SLOT_FOOTER = 0x0000;
const int FF7_PC_SAVE_GAME_SLOT_SIZE = 0x10F4;
const int FF7_PC_SAVE_GAME_SLOT_NUMBER = 15;
const char PC_SAVE_GAME_FILE_ID[] = "\x71\x73";
const quint8 PC_SAVE_GAME_FILE_HEADER[0x09] = {0x71,0x73,0x27,0x06,0x00,0x00,0x00,0x00,0x00}; //PC HEADER (for when we need to create one)

/*~~~~~~~~~~~~~~~~~~ Psx save file ~~~~~~~~~~~~~~~~*/
const int FF7_PSX_SAVE_GAME_SIZE = 0x2000;
const int FF7_PSX_SAVE_GAME_HEADER = 0x0000;
const int FF7_PSX_SAVE_GAME_FOOTER = 0x0000;
const int FF7_PSX_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_PSX_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_PSX_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_PSX_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_PSX_SAVE_GAME_SLOT_NUMBER = 1;
const char PSX_SAVE_GAME_FILE_ID[] = "\x53\x43\x11\x01\x82\x65\x82\x65\x82\x56\x81\x5E\x82\x72\x82\x60";

//BELOW 1/2 HEADER DATA FOR EACH PSX SAVE SLOT, (NOTE: last 256 bytes are 0x00, no region data in this section)

//Slot 01 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S01[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x50, 0x81,0x5E,0x82,0x4F, 0x82,0x58,0x81,0x46,
 0x82,0x54,0x82,0x4F, 0x00,0x00,0x00,0x00, 0x62,0x75,0x31,0x30, 0x3A,0x00,0x00,0x00, 0x62,0x75,0x30,0x30, 0x3A,0x00,0x00,0x00, 0xA0,0x3B,0x1D,0x80, 0x8C,0x3C,0x1D,0x80,
 0x00,0x3F,0x1D,0x80, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x1D,0x57, 0xDD,0x3E,0xBA,0x42, 0xB7,0x5E,0x53,0x5A, 0x38,0x2E,0xF8,0x1D, 0xF3,0x39,0xEE,0x59, 0xEC,0x71,0xB3,0x1D, 0x8E,0x39,0x87,0x7D, 0x08,0x31,0xFF,0x7F,
 0xFF,0x15,0x21,0x76, 0xF3,0xFF,0xFF,0xFF, 0xDF,0x5D,0x32,0x63, 0x66,0xDA,0xDD,0xFD, 0xDF,0x8A,0x66,0x77, 0x77,0x56,0xDD,0xFD, 0x4F,0x71,0x68,0x13, 0x7B,0x22,0xD5,0xFD,
 0x55,0x47,0x11,0x81, 0x3E,0x22,0xA2,0xFD, 0xDF,0x15,0x11,0xB3, 0x5E,0x72,0x52,0xF8, 0xAF,0x32,0x31,0x2B, 0x61,0xB2,0x77,0xFD, 0x8F,0x37,0x62,0x16, 0x61,0x73,0x67,0xF8,
 0xCF,0x67,0xBB,0x32, 0xB8,0x76,0xBB,0xFD, 0xBF,0x76,0xEB,0xB3, 0xEC,0xB7,0xCB,0xF8, 0x7F,0xB7,0x1B,0x31, 0x11,0xE7,0xD7,0xFD, 0x7F,0x5B,0x38,0x31, 0x11,0xEB,0xD8,0xFD,
 0xBF,0xAA,0xB7,0x11, 0x31,0xEB,0xDC,0xFD, 0xAF,0xDD,0xB8,0x18, 0xB3,0xCE,0xDE,0xFD, 0xDF,0xDD,0xBA,0xED, 0xCC,0xCC,0xDE,0xFD, 0xFF,0xFF,0xBF,0xEF, 0x5C,0xEC,0xEE,0xFF};

//Slot 02 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S02[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x51, 0x81,0x5E,0x82,0x58, 0x82,0x58,0x81,0x46,
 0x82,0x54,0x82,0x58, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x50, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x1B,0x63, 0x5A,0x42,0x72,0x62, 0x11,0x4A,0xB6,0x2D, 0xEC,0x69,0x56,0x21, 0x90,0x31,0x87,0x7D, 0x8C,0x39,0x29,0x2D, 0x0D,0x1D,0xE8,0x1C, 0xC7,0x14,0xFF,0x7F,
 0xFF,0xFF,0x1F,0x44, 0xAA,0xFF,0xFF,0xFF, 0x9F,0x99,0x36,0xC4, 0xED,0x9A,0x99,0xF9, 0x9F,0x99,0xFA,0x72, 0xC7,0x9C,0x99,0xF9, 0x9F,0x99,0xF1,0x51, 0x75,0xAC,0x99,0xF9,
 0x9F,0x39,0xFF,0x84, 0x77,0xDC,0x94,0xF9, 0x9F,0x39,0x82,0x8B, 0x57,0xCC,0x6A,0xF9, 0x9F,0x89,0xCC,0x21, 0x75,0xDD,0xEC,0xFB, 0x9F,0x49,0x82,0x11, 0xC7,0xEE,0xCD,0xDE,
 0x9F,0x89,0xBC,0xBD, 0xEC,0xEE,0x7E,0xDC, 0x9F,0xB9,0x38,0xD4, 0xEE,0xEE,0x7E,0xC7, 0x9F,0xDA,0x85,0x52, 0xED,0xEE,0xCE,0xC7, 0xAF,0xED,0xDC,0xCC, 0xEE,0xEE,0xCE,0x77,
 0xCF,0xED,0xBB,0xED, 0xEE,0xEE,0xCE,0x57, 0x84,0xEB,0xBB,0xEE, 0xEE,0xEE,0x7C,0x57, 0x58,0xD8,0xEE,0xEE, 0xCE,0x77,0x7C,0x25, 0x85,0xD8,0xCE,0xC7, 0x7C,0x75,0x5C,0x22};

//Slot 03 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S03[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x52, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x51, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x51, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x1C,0x5F, 0x9B,0x4A,0x95,0x5E, 0x56,0x4A,0xBA,0x3D, 0x11,0x4E,0xD4,0x39, 0xEC,0x69,0xA9,0x79, 0xAF,0x41,0x74,0x21, 0x86,0x7D,0x4F,0x25, 0xEF,0x18,0xFF,0x7F,
 0xFF,0xFF,0x1F,0x44, 0xF1,0xFF,0xFF,0xFF, 0x8F,0x88,0x88,0x27, 0xA2,0xC8,0xCC,0xFC, 0x3F,0x77,0xA7,0x2B, 0x21,0xC4,0xCC,0xFC, 0x1F,0xE7,0x7E,0xED, 0xFF,0x61,0xCC,0xFC,
 0x1F,0xAB,0xEE,0xED, 0x1B,0x21,0xC6,0xFC, 0x2F,0xCB,0x2A,0x1F, 0x7B,0x25,0x87,0xFC, 0xBF,0xCD,0x16,0x1F, 0xBB,0x7B,0x74,0xF8, 0xDF,0xCD,0xF6,0x4F, 0xBE,0xBB,0x74,0xF8,
 0x8F,0xCD,0xA6,0xD1, 0xEE,0xBE,0xED,0xF6, 0xCF,0xC8,0x8B,0x11, 0xD8,0xEE,0xE7,0x15, 0xCF,0xCC,0xFE,0xF2, 0xDF,0xEB,0xED,0x5E, 0xCF,0xCC,0x1E,0xF1, 0x2F,0xEB,0xBE,0xBB,
 0xCF,0xCC,0xBE,0xF1, 0xB1,0xBE,0xEE,0x55, 0xCF,0xEC,0xEB,0x2B, 0xED,0xBE,0xEE,0xF4, 0xCF,0xEC,0xBB,0xBE, 0xB2,0xBE,0xEE,0x1A, 0xFF,0x1F,0xBE,0xFE, 0x51,0xEE,0xEE,0x34};

//Slot 04 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S04[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x53, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x51, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x52, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x9D,0x73, 0x5B,0x6B,0xF9,0x5E, 0xF6,0x6A,0xD5,0x62, 0x77,0x52,0x2E,0x6E, 0x31,0x4A,0x76,0x18, 0xC9,0x75,0x6A,0x49, 0x77,0x31,0x86,0x7D, 0x09,0x31,0xFF,0x7F,
 0xFF,0xFF,0x7F,0xA8, 0xFF,0xFF,0xFF,0xFF, 0xDF,0x77,0xB7,0xA6, 0xDD,0xDD,0xDD,0xFD, 0xAF,0x68,0xEC,0xAC, 0x7D,0xA7,0xAF,0xFA, 0xB7,0x3C,0xE8,0xBE, 0x7D,0x5F,0x7F,0xFF,
 0xEB,0xEE,0xEE,0xEE, 0xC9,0xF6,0x1F,0x55, 0xC6,0xEE,0x8B,0xEB, 0x6C,0x13,0xF1,0xFF, 0xBF,0xEE,0xF8,0xBE, 0xFE,0x1F,0x21,0x5A, 0xDF,0xBE,0xFE,0x51, 0xBE,0x47,0x55,0x24,
 0x9F,0xEB,0x38,0x6C, 0xF3,0xFF,0xFF,0x31, 0x8F,0xE8,0x6E,0x36, 0xF2,0x6F,0x11,0xF3, 0xF8,0x81,0x22,0x22, 0xFF,0x1F,0x62,0x36, 0x18,0x56,0xFF,0xFF, 0x21,0x12,0xF1,0x1F,
 0x8F,0xF5,0xF6,0x21, 0x12,0xFF,0xFF,0xFF, 0x5F,0xF1,0x11,0x13, 0xFF,0xFF,0xF1,0xFF, 0x14,0x33,0x33,0xF1, 0x1F,0x1F,0xF3,0xFF, 0x13,0xF3,0x16,0xFF, 0x3F,0x31,0xFF,0x1F};

//Slot 05 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S05[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x54, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x53, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x1E,0x2E, 0x36,0x3E,0xD7,0x2D, 0x5C,0x21,0xCC,0x65, 0xB0,0x49,0x8C,0x10, 0xAE,0x51,0x9C,0x73, 0x87,0x7D,0x35,0x1D, 0x11,0x29,0x0D,0x25, 0xB0,0x14,0xFF,0x7F,
 0xFF,0x99,0x99,0xCE, 0x89,0xCE,0xEE,0xBC, 0xAF,0xEC,0xCE,0xEE, 0xEC,0xC7,0xBE,0x4B, 0xAF,0xAA,0xEE,0xE7, 0x7E,0xE7,0x4B,0xE4, 0xAF,0xDC,0xCD,0x77, 0x7E,0xEE,0xEE,0xEE,
 0xCF,0xEE,0xEE,0x7E, 0xEE,0xBE,0xBB,0xBE, 0xAF,0xAA,0xDC,0xEE, 0xBE,0x44,0x7D,0x3B, 0xAF,0xAA,0xAA,0xBB, 0x11,0x14,0x7D,0x13, 0xAF,0xAA,0xEA,0x44, 0x43,0x11,0x73,0x11,
 0xAF,0xAA,0xD5,0xDE, 0x39,0x11,0xD4,0x33, 0xAF,0x5A,0xCC,0x14, 0x43,0xEE,0xDB,0x95, 0xAF,0xDA,0x47,0x41, 0x4B,0x41,0xDE,0xFA, 0xAF,0x6A,0x11,0xB1, 0xE8,0xBE,0x8E,0xFA,
 0xAF,0xAA,0x13,0x64, 0xA2,0xC5,0x2D,0xFA, 0xAF,0xAA,0x35,0x83, 0xAC,0xAA,0x85,0xFA, 0xAF,0xAA,0xAA,0x8A, 0xAC,0xAA,0xEA,0xFA, 0xFF,0xFF,0xFF,0x9F, 0xF9,0xFF,0xE9,0xF5};

//Slot 06 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S06[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x55, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x54, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x3C,0x5B, 0x3E,0x4F,0xDD,0x36, 0x99,0x46,0x1C,0x22, 0x30,0x62,0x8D,0x31, 0x32,0x46,0xD0,0x35, 0xCB,0x59,0xA8,0x79, 0x86,0x7D,0x71,0x21, 0x4B,0x29,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x46, 0x64,0xF6,0xFF,0xFF, 0xCF,0xCC,0x6C,0x21, 0x32,0x64,0xCC,0xFC, 0xCF,0xCC,0x16,0xFF, 0xFF,0x22,0xC6,0xFC, 0xCF,0xAC,0x23,0xF1, 0x2F,0x23,0x63,0xFC,
 0xCF,0x84,0xDD,0x88, 0x34,0x54,0x35,0xFA, 0xAF,0x84,0xEE,0x44, 0xD8,0x49,0x55,0xF6, 0xAF,0xEE,0xED,0x48, 0xE8,0x18,0x54,0xF4, 0xCF,0xDA,0x77,0xED, 0xEE,0x8E,0x58,0xF5,
 0xCF,0x8C,0xDD,0xDE, 0x44,0x88,0xD8,0xF6, 0xCF,0x8C,0x22,0x44, 0x31,0x43,0xAA,0xFC, 0xCF,0xAC,0x44,0xF1, 0x52,0x45,0xAA,0xFC, 0xCF,0xAC,0x48,0x48, 0xD5,0xDD,0xA8,0xFC,
 0xAF,0x48,0xF2,0x58, 0x7D,0x77,0xEE,0xF7, 0xAF,0xC4,0x46,0x42, 0x77,0xEE,0xEE,0xF7, 0xCF,0xCC,0x8A,0xE8, 0xEE,0xEE,0x7E,0xA7, 0xFF,0xAF,0xEE,0xEE, 0x77,0xEE,0x7E,0xA8};

//Slot 07 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S07[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x56, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x55, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x7D,0x6B, 0x18,0x63,0xDC,0x4A, 0x77,0x4A,0x51,0x5E, 0x32,0x46,0xCC,0x65, 0xA9,0x75,0x86,0x7D, 0x8D,0x31,0x69,0x49, 0x29,0x25,0x28,0x25, 0xE7,0x1C,0xFF,0x7F,
 0xFF,0xFF,0xFF,0xFF, 0xFF,0xFF,0xFF,0xFF, 0x8F,0x88,0xA8,0x65, 0xA6,0xAC,0x88,0xF8, 0x8F,0x88,0xDA,0xAA, 0xEE,0xCC,0x88,0xF8, 0x8F,0xA8,0xAE,0x66, 0xEA,0xAA,0xAA,0xF8,
 0x8F,0xD8,0xAE,0x6A, 0x46,0xEA,0xAE,0xF8, 0x8F,0xE8,0xEE,0xAC, 0xF3,0xE4,0xAC,0xF8, 0x8F,0xEA,0xAA,0xA6, 0x16,0xE2,0x66,0xFA, 0x8F,0xEA,0x33,0x41, 0x2C,0xE6,0x22,0xFA,
 0x8F,0xEA,0x31,0x1F, 0xF2,0xA6,0x22,0xFA, 0x8F,0xEA,0x34,0xF1, 0xFF,0x42,0x16,0xF5, 0x8F,0xEA,0x3A,0xFF, 0x1F,0xDA,0x2A,0xF2, 0x8F,0xEA,0x4E,0x22, 0x11,0x2E,0x6C,0xF6,
 0x8F,0xEA,0xEE,0x3E, 0x1F,0xFE,0xAE,0x66, 0x8F,0xE8,0xEE,0x1A, 0xFF,0xEE,0xAE,0xAA, 0x8F,0xEA,0xEE,0x14, 0xFF,0xE6,0xEE,0xAC, 0xFF,0xE5,0x6E,0x13, 0xFF,0xC1,0xEE,0xCE};

//Slot 08 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S08[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x57, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x56, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0xD8,0x56, 0x3D,0x46,0xDC,0x4A, 0xDC,0x3D,0x0E,0x52, 0xB5,0x39,0xC9,0x71, 0xAE,0x35,0x87,0x7D, 0x17,0x21,0x6A,0x35, 0xF3,0x20,0xEF,0x1C, 0xE8,0x1C,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x1F, 0x11,0xFF,0xFF,0xFF, 0x9F,0x99,0xB7,0x8B, 0xEB,0xBE,0x99,0xF9, 0x9F,0x79,0xEB,0x18, 0x81,0xEE,0x9B,0xF9, 0x9F,0xB7,0xEE,0x8E, 0xF5,0xE8,0xBE,0xF9,
 0x7F,0xEB,0xEE,0xEE, 0x5B,0xE8,0xEE,0xF9, 0xBF,0xDD,0xDC,0xDD, 0xEE,0xEE,0xEE,0xFB, 0xBF,0xCD,0xAA,0x4A, 0xEC,0xEC,0xEE,0xFB, 0xBF,0xCD,0xEE,0xAC, 0xEA,0xED,0xEE,0xFB,
 0xE1,0xDD,0xEB,0x4A, 0xEC,0xEC,0xEE,0xFB, 0xEE,0x8E,0xEB,0xDE, 0xDE,0xEE,0xEE,0xFB, 0xED,0x6E,0xEB,0xF3, 0x33,0xEE,0xEE,0xFE, 0xDD,0x8C,0xCE,0xFF, 0x3F,0xEE,0xEE,0xFE,
 0xCC,0x8A,0xCE,0x36, 0xE6,0xDE,0xEE,0xFE, 0xAA,0x64,0xAE,0xA4, 0xDD,0xCD,0xBE,0xFE, 0x46,0x62,0xAD,0x12, 0x1F,0xC1,0xBE,0x1C, 0x24,0x64,0x44,0x44, 0xAA,0xCC,0xEE,0xCA};

//Slot 09 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S09[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x58, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x57, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x3E,0x4F, 0xDC,0x4E,0x13,0x42, 0x52,0x4A,0xB0,0x35, 0x4D,0x29,0xB5,0x56, 0xA9,0x75,0xA8,0x14, 0xA7,0x7D,0xC7,0x29, 0x89,0x4D,0xEA,0x1C, 0x66,0x1D,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x44, 0x44,0xFF,0xFF,0xFF, 0xAF,0xAA,0x6C,0x55, 0xD6,0xCD,0xAA,0xFA, 0xAF,0xCA,0x35,0x53, 0x65,0xDD,0xAC,0xFA, 0xAF,0x5C,0x33,0x35, 0x55,0xD6,0xAD,0xFA,
 0xAF,0x35,0x53,0x33, 0x35,0xD6,0xC9,0xFA, 0xAF,0x35,0x53,0x53, 0x56,0x66,0xD9,0xFA, 0xAF,0x36,0x63,0x65, 0x69,0x67,0xDD,0xFA, 0xAF,0x5D,0x93,0x96, 0x49,0x94,0xDD,0xFA,
 0xAF,0x6D,0x65,0x67, 0x21,0x61,0x6D,0xFA, 0xAF,0xDC,0x56,0x12, 0x21,0x32,0xC6,0xFA, 0xAF,0xEC,0x6D,0x12, 0x31,0x32,0xAC,0xFA, 0xAF,0xBE,0xD9,0x23, 0x74,0xD3,0xAC,0xFA,
 0xCF,0xEE,0xE9,0x3D, 0x32,0x9D,0xC4,0xFA, 0xEF,0xEB,0xE8,0x6B, 0xDD,0x99,0xB7,0xFC, 0xEC,0x3E,0xE2,0xEB, 0xEE,0xEE,0x47,0xBB, 0xBE,0x13,0xBE,0xEB, 0xEB,0x4E,0x47,0xB4};

//Slot 10 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S10[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x4F, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x4F,0x82,0x58, 0x81,0x5E,0x82,0x4F,
 0x82,0x4F,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0xFC,0x52, 0x7B,0x36,0x74,0x4E, 0x72,0x5E,0x15,0x32, 0xF2,0x39,0x0C,0x6E, 0xC9,0x79,0xA8,0x7D, 0x9C,0x73,0x8F,0x29, 0xAD,0x35,0x86,0x7D, 0x29,0x29,0xFF,0x7F,
 0xFF,0xFF,0xFF,0xAA, 0xAA,0xFF,0xFF,0xFF, 0xDF,0xDD,0x79,0x53, 0xB6,0xD8,0xDD,0xFD, 0xDF,0x9D,0x24,0x22, 0x55,0x8B,0xDD,0xFD, 0xDF,0x4D,0x21,0x22, 0x22,0xB5,0xD8,0xFD,
 0xDF,0x29,0x52,0x5B, 0xB5,0xBB,0x9C,0xFD, 0xDF,0x29,0x21,0x53, 0x26,0xB2,0x8B,0xFD, 0xDF,0x39,0xFF,0xFF, 0x1F,0x52,0x52,0xFD, 0xDF,0x39,0xF1,0xFF, 0x1F,0x62,0x2B,0xFD,
 0xDF,0x67,0xE6,0x16, 0xE3,0x5C,0x2B,0xFD, 0xDF,0xC8,0xFF,0xF1, 0x12,0x52,0x57,0xFD, 0xDF,0xCD,0xF1,0xFF, 0xF2,0x72,0x7D,0xFD, 0xDF,0xDD,0xFC,0x1F, 0x12,0x76,0x9D,0xFD,
 0xDF,0x9D,0xCE,0xFF, 0x51,0xCE,0xD9,0xFD, 0xDF,0x6D,0xEE,0x3C, 0xE5,0xEE,0x96,0xFD, 0xDA,0xC6,0xCE,0xEE, 0xEE,0xEE,0x6C,0xA9, 0x11,0xC6,0xEE,0xCC, 0xEC,0xEE,0x6C,0x16};

//Slot 11 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S11[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x50, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x52, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x4F, 0x81,0x5E,0x82,0x50,
 0x82,0x50,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0xBE,0x67, 0xFB,0x52,0x79,0x3A, 0x31,0x4A,0x14,0x36, 0xFF,0x7F,0x83,0x10, 0xD0,0x35,0x87,0x7D, 0x19,0x6B,0x6A,0x35, 0x2A,0x25,0x27,0x35, 0xE5,0x24,0xFF,0x7F,
 0xFF,0xFF,0xFF,0xFF, 0xFF,0xFF,0xFF,0xFF, 0x9F,0x99,0x99,0xBB, 0xBC,0x99,0x99,0xF9, 0x9F,0x99,0xB9,0xEC, 0xEE,0x9E,0x99,0xF9, 0x9F,0x99,0xCB,0xCC, 0xCE,0xBE,0x99,0xF9,
 0x9F,0x99,0x2B,0x53, 0x35,0xC5,0x99,0xF9, 0x9F,0x99,0x18,0x11, 0x11,0x82,0x99,0xF9, 0x9F,0x99,0x14,0x11, 0x11,0x83,0x99,0xF9, 0x9F,0x49,0x84,0x2B, 0x82,0x5B,0x94,0xF9,
 0x9F,0x89,0x22,0x12, 0x33,0x53,0x9B,0xF9, 0x9F,0xB9,0x1C,0x11, 0x13,0xC2,0x9E,0xF9, 0x9F,0xE9,0x47,0x11, 0x23,0xE5,0xBE,0xF9, 0x9F,0x7B,0xC7,0x22, 0x52,0xEB,0xE7,0xF9,
 0xBA,0x77,0x87,0x54, 0xC5,0xB4,0x77,0xAB, 0x7B,0x77,0x8E,0xC1, 0x4C,0xE4,0x7E,0xBD, 0xEE,0xE7,0xBE,0xE2, 0x8E,0xEB,0x7D,0xDE, 0xDE,0x7E,0xEE,0xC8, 0x8C,0xDE,0xE7,0xEE};

//Slot 12 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S12[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x51, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x53, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x50, 0x81,0x5E,0x82,0x50,
 0x82,0x50,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0xBF,0x6F, 0x7C,0x6B,0x1B,0x5B, 0xBB,0x3E,0xD7,0x4E, 0x97,0x3A,0x31,0x56, 0x14,0x32,0x9C,0x73, 0xED,0x59,0xD1,0x2D, 0x09,0x21,0x86,0x7D, 0x8D,0x35,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x99, 0xF9,0xFF,0xFF,0xFF, 0xDF,0xDD,0x5A,0x65, 0x76,0xDA,0xDD,0xFD, 0xDF,0xAD,0x55,0x66, 0x68,0xA5,0xDD,0xFD, 0xDF,0x5D,0x63,0x86, 0x66,0x54,0xDD,0xFD,
 0xDF,0x3A,0x86,0x36, 0x41,0x48,0xDA,0xFD, 0xDF,0x57,0x68,0x12, 0x41,0x68,0xDA,0xFD, 0xDF,0x67,0x3B,0x81, 0x4B,0x88,0xD7,0xFD, 0xDF,0x67,0x3B,0x61, 0x8C,0xB8,0xDA,0xFD,
 0xDF,0x67,0x13,0x11, 0x44,0xB8,0xDD,0xFD, 0xDF,0x6A,0x21,0x14, 0x43,0xEB,0xDD,0xFD, 0xDF,0x7A,0x25,0x25, 0xB4,0xDE,0xDD,0xFD, 0xDF,0x7D,0x5B,0x63, 0xBB,0xDD,0xDD,0xFD,
 0xDF,0xAD,0xD7,0x6A, 0x84,0xDE,0xDD,0xFD, 0xDF,0xDD,0xD7,0x2E, 0xE3,0xEC,0xDD,0xFD, 0xDF,0xDD,0xEA,0x5C, 0xCE,0xCC,0xDE,0x9D, 0xFF,0x9F,0xCE,0xEC, 0xCC,0xCC,0xEC,0x9A};

//Slot 13 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S13[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x52, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x53, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x51, 0x81,0x5E,0x82,0x50,
 0x82,0x50,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x5A,0x6B, 0x1F,0x4B,0xFE,0x42, 0xF9,0x5E,0xB8,0x4E, 0x36,0x36,0x31,0x52, 0x9C,0x73,0xC4,0x24, 0x8B,0x45,0xAE,0x35, 0x86,0x7D,0x4D,0x21, 0x06,0x2D,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x88, 0x88,0xFF,0xFF,0xFF, 0xCF,0xCC,0xAC,0x77, 0x77,0xCA,0xCC,0xFC, 0xCF,0xCC,0x5A,0x22, 0x33,0xC5,0xCC,0xFC, 0xCF,0xCC,0x25,0x32, 0x33,0x73,0xCC,0xFC,
 0xCF,0xCC,0x25,0x33, 0x33,0x73,0xCC,0xFC, 0xCF,0xCC,0x25,0x33, 0x23,0xB3,0xCC,0xFC, 0xCF,0xCC,0x67,0xBB, 0xBB,0xB6,0xCC,0xFC, 0xCF,0xAC,0xEB,0xDE, 0xED,0xDE,0xC7,0xFC,
 0xCF,0x7C,0x65,0x5B, 0x6B,0xDB,0xC7,0xFC, 0xCF,0x7C,0x37,0x22, 0x26,0xB6,0xCC,0xFC, 0xCF,0xCC,0x67,0x52, 0x66,0xCD,0xCC,0xFC, 0xCF,0xCC,0x6A,0x33, 0x63,0xAE,0xCC,0xFC,
 0xCF,0xAC,0x59,0xDB, 0xED,0xEB,0xCA,0xFC, 0xC8,0x9A,0x1E,0xB4, 0xBB,0xE7,0xA9,0x8C, 0xEA,0x99,0x7E,0xE1, 0x4E,0xE7,0xE9,0xAE, 0xEE,0xE9,0xAE,0xB4, 0x7E,0xEB,0xE9,0xEE};

//Slot 14 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S14[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x53, 0x81,0x5E,0x82,0x51, 0x82,0x58,0x81,0x46,
 0x82,0x53,0x82,0x53, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x52, 0x81,0x5E,0x82,0x50,
 0x82,0x50,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x5C,0x67, 0xB9,0x4A,0x06,0x2D, 0x12,0x3A,0xEE,0x61, 0xD1,0x49,0xCA,0x6D, 0xA8,0x7D,0x90,0x31, 0x86,0x7D,0xD5,0x1C, 0x08,0x25,0xD1,0x1C, 0xEB,0x1C,0xFF,0x7F,
 0xFF,0xFF,0xFF,0x11, 0x11,0xFF,0xFF,0xFF, 0xAF,0xAA,0xDA,0xDB, 0xBD,0xA9,0xAA,0xFA, 0xAF,0xBA,0xBB,0xBD, 0xBD,0x9D,0xAA,0xFA, 0xAF,0xDA,0xBD,0xBB, 0xDD,0xDD,0xA5,0xFA,
 0xAF,0x9A,0xDD,0xBB, 0xED,0xDD,0x59,0xFA, 0xAF,0xBA,0xDD,0x9C, 0xEC,0xC9,0xDD,0xFA, 0xAF,0xBA,0xEE,0xCE, 0x9E,0xEE,0xDD,0xFA, 0xAF,0xBA,0x9E,0x12, 0x11,0xE2,0xB9,0xFA,
 0xAF,0x9A,0x44,0x44, 0x22,0xE4,0xB5,0xFA, 0x81,0x66,0x49,0xC9, 0x24,0x9C,0xDA,0xFA, 0xB6,0xDB,0x4C,0xF1, 0x21,0xE9,0xDA,0xFA, 0xDB,0x36,0x94,0x12, 0x21,0xE9,0x9A,0xFA,
 0x71,0x33,0x41,0x29, 0x91,0xAE,0xAA,0xFA, 0x35,0x93,0x1F,0x9E, 0xE9,0x33,0xAA,0xFA, 0x33,0x93,0x1F,0x44, 0x1E,0x39,0x83,0xFA, 0x33,0x93,0x11,0x24, 0x19,0x39,0x13,0xFF};

//Slot 15 Header
const quint8 PSX_SAVE_GAME_FILE_HEADER_S15[0x100]=
{0x53,0x43,0x11,0x01, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x54, 0x81,0x5E,0x82,0x58, 0x82,0x58,0x81,0x46,
 0x82,0x54,0x82,0x58, 0x00,0x00,0x00,0x00, 0x82,0x65,0x82,0x65, 0x82,0x56,0x81,0x5E, 0x82,0x72,0x82,0x60, 0x82,0x75,0x82,0x64, 0x82,0x50,0x82,0x53, 0x81,0x5E,0x82,0x50,
 0x82,0x50,0x81,0x46, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
 0x00,0x00,0x5C,0x67, 0x37,0x67,0xB9,0x4E, 0xB2,0x5A,0x37,0x3A, 0x34,0x42,0x50,0x4E, 0xCF,0x39,0xA8,0x71, 0xAA,0x59,0xAB,0x45, 0xAC,0x35,0x86,0x7D, 0x29,0x25,0xFF,0x7F,
 0x1F,0x77,0xEB,0xEE, 0xF2,0x21,0x42,0xEE, 0x9F,0xB7,0xBE,0xE8, 0xFC,0x2F,0x22,0xB4, 0x9F,0xE7,0xEE,0x68, 0x46,0x2F,0x24,0x42, 0x9F,0xE4,0x39,0xF1, 0x63,0x42,0x24,0x74,
 0x9F,0xE2,0x19,0xFF, 0x61,0x44,0x47,0x44, 0x9F,0xE1,0x19,0xFF, 0x83,0x47,0xCC,0x77, 0xDF,0xE2,0xBD,0x51, 0x8E,0x78,0x6C,0x8C, 0xDF,0xE4,0xAD,0x13, 0x63,0x87,0x68,0xEC,
 0xDF,0xE4,0x9D,0xF1, 0xFF,0xC7,0x68,0xEC, 0xDF,0xB7,0xDD,0x14, 0xFF,0xE7,0x55,0xCE, 0xDF,0xBA,0xDD,0x6B, 0xF1,0xE6,0x65,0xCE, 0xDF,0xAD,0x9A,0x4E, 0xF1,0xE3,0xE5,0xCC,
 0xDF,0x9D,0xEE,0xEE, 0x11,0xE5,0xE3,0xCC, 0xDF,0xDD,0xE8,0xEE, 0xEE,0xE5,0xE1,0x8C, 0xDF,0xDD,0x8C,0xEE, 0xEE,0x45,0xE1,0x8C, 0xFF,0xFF,0xC1,0xE8, 0xEE,0x13,0xE3,0x78};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PSV SAVE INFO~~~~~~~~~~~~~~~~~~~~~~~~~*/
const int FF7_PSV_SAVE_GAME_SIZE = 0x2084;
const int FF7_PSV_SAVE_GAME_HEADER = 0x0084;
const int FF7_PSV_SAVE_GAME_FOOTER = 0x0000;
const int FF7_PSV_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_PSV_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_PSV_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_PSV_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_PSV_SAVE_GAME_SLOT_NUMBER = 1;
const char PSV_SAVE_GAME_FILE_ID[] = "\x00\x56\x53\x50";

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Mem Card Format~~~~~~~~~~~~~~~~~~~*/
const int FF7_MC_SAVE_GAME_SIZE = 0x20000;
const int FF7_MC_SAVE_GAME_HEADER = 0x2000;
const int FF7_MC_SAVE_GAME_FOOTER = 0x0000;
const int FF7_MC_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_MC_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_MC_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_MC_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_MC_SAVE_GAME_SLOT_NUMBER = 15;
const char MC_SAVE_GAME_FILE_ID[] = "\x4D\x43";
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PSP SAVE FORMAT~~~~~~~~~~~~~~~~~~~*/
const int FF7_PSP_SAVE_GAME_SIZE = 0x20080;
const int FF7_PSP_SAVE_GAME_HEADER = 0x2080;
const int FF7_PSP_SAVE_GAME_FOOTER = 0x0000;
const int FF7_PSP_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_PSP_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_PSP_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_PSP_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_PSP_SAVE_GAME_SLOT_NUMBER = 15;
const char PSP_SAVE_GAME_FILE_ID[] = "\x00\x50\x4D\x56";
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VGM SAVE FORMAT~~~~~~~~~~~~~~~~~~~~*/
const int FF7_VGS_SAVE_GAME_SIZE = 0x20040;
const int FF7_VGS_SAVE_GAME_HEADER = 0x2040;
const int FF7_VGS_SAVE_GAME_FOOTER = 0x0000;
const int FF7_VGS_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_VGS_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_VGS_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_VGS_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_VGS_SAVE_GAME_SLOT_NUMBER = 15;
const char VGS_SAVE_GAME_FILE_ID[] = "\x56\x67\x73\x4D";
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DEX SAVE FORMAT~~~~~~~~~~~~~~~~~~~~*/
const int FF7_DEX_SAVE_GAME_SIZE = 0x20F40;
const int FF7_DEX_SAVE_GAME_HEADER = 0x2F40;
const int FF7_DEX_SAVE_GAME_FOOTER = 0x0000;
const int FF7_DEX_SAVE_GAME_DATA_SIZE = 0x10F4;
const int FF7_DEX_SAVE_GAME_SLOT_HEADER = 0x0200;
const int FF7_DEX_SAVE_GAME_SLOT_FOOTER = 0x0D0C;
const int FF7_DEX_SAVE_GAME_SLOT_SIZE = 0x2000;
const int FF7_DEX_SAVE_GAME_SLOT_NUMBER = 15;
const char DEX_SAVE_GAME_FILE_ID[] = "\x31\x32\x33\x2D\x34\x35\x36\x2D\x53\x54\x44";


/* END FILE INFO */
// pack all structs if not your gonna have a bad time

struct item{// sizeof 2
quint8 id;// item id
quint8 qty;//
}__attribute__((__packed__));

struct materia{// sizeof 4
quint8 id;
quint8 ap[3];
}__attribute__((__packed__));

struct LOVE
{
qint8 aeris;
qint8 tifa;
qint8 yuffie;
qint8 barret;
}__attribute__((__packed__));

struct FF7DESC {		// [0x0044] Descriptions; no actual game data -100%
    qint8 level;		// [0x0000] Lead character's level
    qint8 party[3];             // [0x0001] Party
    quint8 name[16];		// [0x0004] Lead character's name (ff7 string)
    quint16 curHP;		// [0x0014] Lead character's current HP
    quint16 maxHP;		// [0x0016] Lead character's base HP
    quint16 curMP;		// [0x0018] Lead character's current MP
    quint16 maxMP;		// [0x001A] Lead character's base MP
    quint32 gil;		// [0x001C] Amount of gil
    quint32 time;		// [0x0020] Total number of seconds played
    quint8 location[32];	// [0x0024] Save location (ff7 string)
}__attribute__((__packed__));
struct FF7WORLD_COORDS
{
quint8 x[3];                   //[0x00] x on map
quint8 angle;                  //[0x03] viewing angle 0-0xff
quint8 y[3];                   //[0x04] y on map 0-
qint8  z;                      //[0x05] z min=-127 max=127
}__attribute__((__packed__));

struct FF7CHAR {        	// [0x0084] Character info -98% - 1 Unknown
    qint8 id;			// [0x0000] Character id (used by Sephiroth/Vincent slot)
    qint8 level;        	// [0x0001] Level (0-99)
    quint8 strength;		// [0x0002] Strength (0-255)
    quint8 vitality;		// [0x0003] Vitality (0-255)
    quint8 magic;		// [0x0004] Magic (0-255)
    quint8 spirit;		// [0x0005] Spirit (0-255)
    quint8 dexterity;		// [0x0006] Dexterity (0-255)
    quint8 luck;		// [0x0007] Luck (0-255)
    quint8 strength_bonus;      // [0x0008] Str Bonus
    quint8 vitality_bonus;	// [0x0009] Vitality (0-255)
    quint8 magic_bonus;		// [0x000A] Magic (0-255)
    quint8 spirit_bonus;	// [0x000B] Spirit (0-255)
    quint8 dexterity_bonus;	// [0x000C] Dexterity (0-255)
    quint8 luck_bonus;		// [0x000D] Luck (0-255)
    qint8 limitlevel;		// [0x000E] Current limit level (1-4)
    quint8 limitbar;		// [0x000F] Current limit bar (0xFF = limit break)
    quint8 name[12];		// [0x0010] Name (ff7)
    quint8 weapon;		// [0x001C] Equipped weapon
    quint8 armor;               // [0x001D] Equipped armor
    quint8 accessory;		// [0x001E] Equipped accessory
    quint8 flags[3];		// [0x001F] Character flags[0:0x10] 1: Sadness.[0:0x20] 1: Fury. [1:0x01] 1: Front row.  0: Back row. [2:0x00-0xFF] TNL bar.
    quint16 limits;		// [0x0022] Learned limit skills
    quint16 kills;		// [0x0024] Kill Char Has
    quint16 timesused1;		// [0x0026] Times limit 1-1 used
    quint16 timesused2;         // [0x0028] Times limit 2-1 used
    quint16 timesused3;         // [0x002A] Times limit 3-1 used
    quint16 curHP;		// [0x002C] Current HP
    quint16 baseHP;		// [0x002E] Base HP (before materia alterations)
    quint16 curMP;		// [0x0030] Current MP
    quint16 baseMP;		// [0x0032] Base MP (before materia alterations)
    quint8 z_4[4];              // [0x0034] UNKNOWN!!!!
    quint16 maxHP;		// [0x0038] Maximum HP (after materia alterations)
    quint16 maxMP;		// [0x003A] Maximum MP (after materia alterations)
    quint32 exp;		// [0x003C] Current EXP
    materia materias[16];	// [0x0040] Materia slots (0-7=weapon,8-15=armor)
    quint32 expNext;            // [0x0080] EXP to next level
}__attribute__((__packed__));

struct FF7CHOCOBO {		// [0x0010] Chocobo - 99% - 1 Personality unknown!
    quint16 sprintspd;		// [0x0000] Speed
    quint16 maxsprintspd;       // [0x0002] Max Speed
    quint16 speed;		// [0x0004] Sprint speed
    quint16 maxspeed;		// [0x0006] Max Sprint speed
    quint8 accel;               // [0x0008] acceleration
    quint8 coop;                // [0x0009] cooperation
    quint8 intelligence;	// [0x000A] Intelligence
    quint8 personality;         // [0x000B] personality Type - THIS NEED TO HAVE A RANGE FOUND!
    quint8 pcount;              // [0x000C] P count ??
    quint8 raceswon;		// [0x000D] Number of races won
    quint8 sex;			// [0x000E] Sex (0=male,1=female)
    quint8 type;		// [0x000F] Type (Yellow,Green,Blue,Black,Gold)
}__attribute__((__packed__));

struct FF7XYZ {                 // size of 6. used for coords
    quint16 x;
    quint16 y;
    quint16 z;
}__attribute__((__packed__));

struct FF7SLOT {		// Save slot - Length 0x10F4
    qint16 checksum;		// [0x0000] Checksum
    quint8 z_1[2];              // [0x0002] Unknown data
    FF7DESC desc;		// [0x0004] Length:0x44] Slot description
    quint8 colors[4][3];	// [0x0048] Window colors (RGB)
    FF7CHAR chars[9];		// [0x0054:84] The nine characters (Cl,Ba,Ti,Ae,Re,Yu,Ca,Vi,Ci)
    qint8 party[3];		// [0x04F8] Party members
    quint8 z_2[1];              // [0x04FB] always 0xFF
    item items[320];		// [0x04FC] Items (320 slots)
    materia materias[200];	// [0x077C] Materia (200 slots)
    materia stolen[48];         // [0x0A9C] materia stolen by yuffie.
    quint8 z_3[32];             // [0x0B5C] UNKNOWN DATA (Always 0xFF?)
    quint32 gil;		// [0x0B7C] Party gil
    quint32 time;		// [0x0B80] Total number of seconds played
    quint8 timer[3];            // [0x0B84] countdown timer H:M:S
    quint8 z_4[13];             // [0x0B87] UNKNOWN DATA
    quint16 mapid;		// [0x0B94] Current map
    quint16 locationid;		// [0x0B96] Current location
    quint8 z_5[2];              // [0x0B98] UNKNOWN DATA
    FF7XYZ coord;		// [0x0B9A] Current coordinates (world map)
    quint8 z_6[4];              // [0x0BA0] UNKNOWN DATA
    quint16 mprogress;          // [0x0BA4] Main Progress var
    quint8 z_7[1];              // [0x0BA6] UNKNOWN DATA
    LOVE love;                  // [0X0BA7] Main love points.
    quint8 z_8[17];             // [0x0BAB] UNKNOWN DATA
    quint16 battles;            // [0x0BBC] Number of battle
    quint16 runs;               // [0x0BBE] Number of escapes
    quint16 menu_visible;       // [0x0BC0] Menu items Visible
    quint16 menu_locked;        // [0x0BC2] Menu items locked
    quint8 z_9[16];             // [0x0BC4] UNKNOWN DATA
    quint8 itemsmask_1;         // [0x0BD4] Item mask_1
    quint8 materiacaves;        // [0x0BD5] materia caves picked up  0x01 mime,0x02 HP<->MP,0x04 4xmag, 0x08 KOTR
    quint8 z_10[14];            // [0x0BD6] UNKNOWN DATA
    quint8 keyitems[8];         // [0x0BE4] Key items
    quint8 z_11[8];             // [0x0BEC] UNKNOWN DATA
    LOVE b_love;                // [0x0BF4] Battle Love Points
    quint8 z_12[1];             // [0x0BF8] UNKNOWN DATA
    qint8 pennedchocos[4];      // [0x0BF9] chocos in fenced area at farm rating
    quint8 z_13[2];             // [0x0BFD] UNKNOWN DATA
    quint8 u_weapon_hp[3];      // [0x0BFF] Ultimate Weapons Remaining Hp
    quint8 z_14[28];            // [0x0C02] UNKNOWN DATA
    quint8 tut_sub;             // [0x0C1E] Have we seen the sub tutorial 0x04 =on Show Battle Targets Label 0x40=on
    quint8 ruby_emerald;        // [0x0C1F] WEAPONS ALIVE? 0x05=both 0x1D =non 0x0D = emerald
    quint8 z_15[2];             // [0x0C20] UNKNOWN DATA
    quint8 world_map_chocobos;  // [0x0C22] what is chocobos are visible on world map
    quint8 world_map_vehicles;  // [0x0C23] what is vehicles are visible on world map 0x00 empty,0x01 buggy,0x04 tiny bronco,0x10 highwind (combineable; never 0x11)
    quint8 z_16[97];            // [0x0C24] UNKNOWN DATA
    quint8 bm_progress1;        // [0x0C85] Bombing Mission Flag 1
    quint8 bm_progress2;        // [0x0C86] Bombing Mission Flag 2
    quint8 z_17[45];            // [0X0C87] UNKNOWN DATA 45 50
    quint8 aeris_chruch;        // [0x0CB4] aeris chruch
    quint8 z_18[49];            // [0x0CB5] UNKNOWN
    quint8 bm_progress3;        // [0X0CE6] Bombing mission flag 3
    quint8 z_19[7];             // [0X0CE7] UNKNOWN DATA
    quint16 gp;                 // [0x0CEE] Party GP (0-10000)
    quint8 z_20[12];            // [0x0CF0] UNKNOWN DATA
    qint8 stables;              // [0x0CFC] Number of chocobo stables owned
    qint8 stablesoccupied;      // [0x0CFD] Number of occupied stables
    quint8 z_21[1];             // [0x0CFE] UNKNOWN DATA
    qint8 chocobomask;          // [0x0CFF] Mask of occupied stables
    quint8 chocomated;          // [0x0D00] what stalls can't mate
    quint8 z_22[40];            // [0x0D01] UNKNOWN DATA
    quint8 yuffieforest;        // [0x0D29] yuffie in forest if bit1 = 1 then yes.. others here too?
    quint8 z_23[28];            // [0x0D2A] UNKNOWN DATA
    quint8 donprogress;         // [0x0D46] don's progress var. 00 - 03 when done
    quint8 z_24[31];            // [0x0D47] UNKNOWN DATA
    quint8 turtleflyers;        // [0x0D66] turtles paradice flyers.
    quint8 z_25[12];            // [0X0D67] UNKNOWN DATA
    quint8 reg_yuffie;          // [0x0D73] yuffie regular? 0x6F=yes 0x6E=no
    quint8 z_26[15];            // [0x0D74] UNKNOWN DATA
    quint8 midgartrainflags;    // [0x0D83] Midgar Train Flags.
    quint8 z_27[64];            // [0x0D84] UNKNOWN DATA
    FF7CHOCOBO chocobos[4];     // [0x0DC4] Chocobo slots
    quint8 z_28[32];            // [0x0E04] UNKNOWN DATA
    quint16 coster_2;           // [0x0E24] Coster 2nd place score
    quint16 coster_3;           // [0x0E26] Coster 3rd place score
    quint8 z_29[17];            // [0x0E28] UNKNOWN DATA
    quint16 coster_1;           // [0x0E39] Coster 1st place
    quint8 z_30[105];           // [0x0E3C] UNKNOWN DATA
    qint8 disc;                 // [0x0EA4] Current CD
    quint8 z_31[1];             // [0x0EA5] UNKNOWN DATA
    quint8 intbombing;          // [0x0EA6] 0x14 On Start of Bombing Mission , 0x56 On first Save..
    quint8 z_32[3];             // [0x0EA7] UNKNOWN DATA
    quint16 steps;              // [0x0EAA] Number of steps used in glacear to make you pass out @ 544 steps
    quint8 z_33[22];            // [0x0EAC] Unknown
    quint8 field_help;          // [0x0EC2] Show field hand 1=on 0=off
    quint8 z_34[1];             // [0x0EC3] UNKNOWN
    quint8 chocobonames[6][6];  // [0x0EC4] <-OK Chocobo names
    quint16 chocostaminas[6];   // [0x0EE8] Chocobo staminas 12 bytes
    quint8 reg_vinny;           // [0x0EF4] 0xFF for true 0xFB false (vincent a regualar?)
    quint8 z_35[23];            // [0x0EF5] UNKNOWN DATA
    quint8 location[24];        // [0x0F0C] Location String
    quint8 z_36[5];             // [0x0F24] UNKNOWN DATA
    quint8 tut_save;            // [0x0F29] Have we seen save tut ? 0x3A true , 0x32 false
    quint8 z_37[50];            // [0x0F2A] UNKNOWN DATA
    quint32 l_world;            // [0x0F5C] coords of the leader on the world map part 1 (X, id, angle)
    quint32 l_world2;           // [0x0F60] leader coords part 2 (Y,Z)
    quint32 uw_world;           // [0x0F64] unknown? coords part 1
    quint32 uw_world2;          // [0x0F68] unknown weapon? coords part2
    quint32 tc_world;           // [0x0F6C] tiny bronco/chocobo coords part 1
    quint32 tc_world2;          // [0x0F70] tiny bronco/chocobo coords part2
    quint32 bh_world;           // [0x0F74] Bronco / highwind coords 1
    quint32 bh_world2;          // [0x0F78] brono /highwind coords 2
    quint32 sub_world;          // [0x0F7C] sub on world part 1
    quint32 sub_world2;         // [0x0F80] sub on world part 2
    quint32 durw_world;         // [0x0F84] Diamond/ Ultimate And Ruby Weapons Coords.
    quint32 durw_world2;        // [0x0F88] Diamond/ Ultimate And Ruby Weapons Coords.
    quint16 pole1_x;            // [0x0F8C] 1st Snow Pole X Coordinate.
    quint16 pole1_y;            // [0x0F8E] 1st Snow Pole Y Coordinate.
    quint16 pole2_x;            // [0x0F90] 2nd Snow Pole X Coordinate.
    quint16 pole2_y;            // [0x0F92] 2nd Snow Pole Y Coordinate.
    quint16 pole3_x;            // [0x0F94] 3ed Snow Pole X Coordinate.
    quint16 pole3_y;            // [0x0F96] 3ed Snow Pole Y Coordinate.
    quint8 z_38[236];           // [0x0F98] UNKNOWN
    FF7CHOCOBO choco56[2];      // [0x1084] Chocobo slots 5-6
    quint16 phsmask;            // [0x10A4] who is allowed in the phs
    quint16 unlockedchars;      // [0x10A6] who is visible in the phs
    quint8 z_39[48];            // [0x10A8] UNKNOWN DATA
    quint8 battlespeed;         // [0x10D8] Battle Speed
    quint8 battlemspeed;        // [0x10D9] Battle Message Speed
    quint8 options1;            // [0x10DA] Options 1
    quint8 options2;            // [0x10DB] Options 2
    quint8 controller_map[16];  // [0x10DC] controller mapping?
    quint8 fieldmspeed;         // [0x10EC] Message Speed On field
    quint8 z_40[7];             // [0x10ED] UNKNOWN DATA
}__attribute__((__packed__));
/* FF7HEADFOOT FORMAT COMPATIBILITY (Vegeta_Ss4) v0.8.3*/
    struct FF7HEADFOOT {
    quint8 sl_header[0x0200];       // [0x0000] Slot Header
    quint8 sl_footer[0x0D0C];       // [0x0000] Slot Footer
}__attribute__((__packed__));

struct FF7 {				// [0xFE55]

        FF7SLOT slot[15];		// [0x0009] The 15 save slots

        /*START FORMAT COMPATIBILITY (Vegeta_Ss4) v0.8.3*/
        quint8 file_header_pc [0x0009];    // [0x0000] 0x06277371 this replace quint8 file_tag[9];
        quint8 file_header_psx[0x0000];	// [0x0000] 0x06277371 this replace quint8 file_tag[9];
        quint8 file_header_psv[0x0000];
        quint8 file_header_psp[0x2080];
        quint8 file_header_vgs[0x2040]; //header for vgs/mem ext format.
        quint8 file_header_dex[0x2F40]; //header for gme (dex-drive format)
        quint8 file_header_mc [0x2000];	// [0x0000] 0x06277371 this replace quint8 file_tag[9];
        quint8 file_footer_pc [0x0000];	// [0x0000] 0x06277371
        quint8 file_footer_psx[0x0000];	// [0x0000] 0x06277371
        quint8 file_footer_psv[0x0000];
        quint8 file_footer_vgs[0x0000];
        quint8 file_footer_dex[0x0000];
        quint8 file_footer_mc [0x0000];	// [0x0000] 0x06277371
        quint8 file_footer_psp[0x0000];
        FF7HEADFOOT hf[15];             // [0x0009] The 15 save slots header/footer

        int SG_SIZE;
        int SG_HEADER;
        int SG_FOOTER;
        int SG_DATA_SIZE;
        int SG_SLOT_HEADER;
        int SG_SLOT_FOOTER;
        int SG_SLOT_SIZE;
        int SG_SLOT_NUMBER;
        QString SG_TYPE;
        quint8 * file_headerp;              //pointer to file header
        quint8 * file_footerp;              //pointer to file footer
        QString SG_Region_String[15];       // Store Region String one per slot..
};
#endif // FF7SAVE_H

